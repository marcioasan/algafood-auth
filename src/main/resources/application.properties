#spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
#11.7. Configurando e refatorando o projeto para usar UTC - 2'30"
spring.datasource.url=jdbc:mysql://localhost:3307/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=marcio
spring.datasource.password=123456

#7.4. Schema generation em producao nao e uma boa pratica - 3'30"
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

#7.3. Configurando o pool de conexoes do Hikari
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=10000

#7.10. Adicionando dados de testes com callback do Flyway - 16'40"
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#15.7. Formatando valores monetários com FTL - 3' - a formatação da moeda no e-mail funcionou sem essa configuração
spring.freemarker.settings.locale=pt_BR

#15.8. Desafio: implementando serviço de envio de e-mail fake
#usar 'smtp' chama o serviço o SmtpEnvioEmailService, usar 'fake' chama o FakeEnvioEmailService 
algafood.email.impl=smtp

#15.9. Desafio: Implementando serviço de envio de e-mail sandbox
algafood.email.sandbox.destinatario=marcioasan@yahoo.com.br


#7.9. Criando migracao a partir de DDL gerado por schema generation
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
#spring.jpa.properties.hibernate.format_sql=true

#8.22. Habilitando erros na desserializacao de propriedades inexistentes ou ignoradas
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

#8.26. Desafio: tratando a excecao NoHandlerFoundException - 3'20"
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

#14.8. Implementando o serviço de armazenagem de fotos no disco local - 12'30"
algafood.storage.local.diretorio-fotos=D:\\Marcio\\Algaworks\\ESPECIALISTA SPRING REST\\Fotos\\catalogo

#14.26. Selecionando a implementação do serviço de storage de fotos - 4'51
algafood.storage.tipo=local


#14.20. Criando bean de propriedades de configuração dos serviços de storage - 2'
#algafood.storage.s3.id-chave-acesso=
#algafood.storage.s3.chave-acesso-secreta=
algafood.storage.s3.bucket=algafood-api-test-mas
algafood.storage.s3.regiao=us-east-1
algafood.storage.s3.diretorio-fotos=catalogo

#15.2. Configurando o projeto para envio de e-mails usando servidor SMTP - 1'40"
spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
#spring.mail.password=

#15.3. Implementando o serviço de infraestrutura de envio de e-mails com Spring - 8'
algafood.email.remetente=AlgaFood <marcioasan@gmail.com>

#19.38. Comprimindo as respostas HTTP com Gzip - 2'30"
server.compression.enabled=true

#23.12. Configurando a validacao de JWT no Resource Server com a chave publica - 2'30"
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem


#23.6. Configurando o Resource Server para JWT assinado com chave simétrica - 9'
#logging.level.org.springframework=DEBUG

#23.6. Configurando o Resource Server para JWT assinado com chave simétrica 4'- Configuração retirada nessa aula, ver alteração no ResourceServerConfig
#22.11. Configurando o Resource Server com a nova stack do Spring Security - 5', 8', 15', 16' | Endereço do Authorization Server que valida o token enviado pelo Resource Server (algafood-api). Esse endpoint foi testado no Postman na aula 22.10. Configurando o endpoint de introspecção de tokens no Authorization Server - 4', 6'
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123

#14.3. Validando o tamanho máximo do arquivo - 4', 6'
#spring.servlet.multipart.max-file-size=20KB
#spring.servlet.multipart.max-request-size=20MB

#11.19. Estrategias de nomes de propriedades: snake case vs lower camel case - 2'30"
#spring.jackson.property-naming-strategy=SNAKE_CASE

#Exibir no console os valores passados como parametro ao SQL
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#exibe o log da execucao do flyway
#logging.level.org.flywaydb=debug

#22.2. Adicionando segurança na API com Spring Security - 6'50"
#spring.security.user.name=algafood
#spring.security.user.password=123456